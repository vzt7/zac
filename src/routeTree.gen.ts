/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'

// Create Virtual Routes

const PricingLazyImport = createFileRoute('/pricing')()
const HomeLazyImport = createFileRoute('/home')()
const AboutLazyImport = createFileRoute('/about')()
const ProjectIdLazyImport = createFileRoute('/$projectId')()

// Create/Update Routes

const PricingLazyRoute = PricingLazyImport.update({
  id: '/pricing',
  path: '/pricing',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/pricing.lazy').then((d) => d.Route))

const HomeLazyRoute = HomeLazyImport.update({
  id: '/home',
  path: '/home',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/home.lazy').then((d) => d.Route))

const AboutLazyRoute = AboutLazyImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/about.lazy').then((d) => d.Route))

const ProjectIdLazyRoute = ProjectIdLazyImport.update({
  id: '/$projectId',
  path: '/$projectId',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/$projectId.lazy').then((d) => d.Route))

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/$projectId': {
      id: '/$projectId'
      path: '/$projectId'
      fullPath: '/$projectId'
      preLoaderRoute: typeof ProjectIdLazyImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutLazyImport
      parentRoute: typeof rootRoute
    }
    '/home': {
      id: '/home'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof HomeLazyImport
      parentRoute: typeof rootRoute
    }
    '/pricing': {
      id: '/pricing'
      path: '/pricing'
      fullPath: '/pricing'
      preLoaderRoute: typeof PricingLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/$projectId': typeof ProjectIdLazyRoute
  '/about': typeof AboutLazyRoute
  '/home': typeof HomeLazyRoute
  '/pricing': typeof PricingLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/$projectId': typeof ProjectIdLazyRoute
  '/about': typeof AboutLazyRoute
  '/home': typeof HomeLazyRoute
  '/pricing': typeof PricingLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/$projectId': typeof ProjectIdLazyRoute
  '/about': typeof AboutLazyRoute
  '/home': typeof HomeLazyRoute
  '/pricing': typeof PricingLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/$projectId' | '/about' | '/home' | '/pricing'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/$projectId' | '/about' | '/home' | '/pricing'
  id: '__root__' | '/' | '/$projectId' | '/about' | '/home' | '/pricing'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ProjectIdLazyRoute: typeof ProjectIdLazyRoute
  AboutLazyRoute: typeof AboutLazyRoute
  HomeLazyRoute: typeof HomeLazyRoute
  PricingLazyRoute: typeof PricingLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ProjectIdLazyRoute: ProjectIdLazyRoute,
  AboutLazyRoute: AboutLazyRoute,
  HomeLazyRoute: HomeLazyRoute,
  PricingLazyRoute: PricingLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/$projectId",
        "/about",
        "/home",
        "/pricing"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/$projectId": {
      "filePath": "$projectId.lazy.tsx"
    },
    "/about": {
      "filePath": "about.lazy.tsx"
    },
    "/home": {
      "filePath": "home.lazy.tsx"
    },
    "/pricing": {
      "filePath": "pricing.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
